{"name": "test_04_successful_checkout", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed\nfrom unknown command: 'Runtime.evaluate' wasn't found\n  (Session info: chrome=133.0.6943.99)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7EC866EE5+28773]\n\t(No symbol) [0x00007FF7EC7D25D0]\n\t(No symbol) [0x00007FF7EC668FAA]\n\t(No symbol) [0x00007FF7EC6557B8]\n\t(No symbol) [0x00007FF7EC653F62]\n\t(No symbol) [0x00007FF7EC6547AF]\n\t(No symbol) [0x00007FF7EC67F9CB]\n\t(No symbol) [0x00007FF7EC673210]\n\t(No symbol) [0x00007FF7EC6730B9]\n\t(No symbol) [0x00007FF7EC644A72]\n\t(No symbol) [0x00007FF7EC642A03]\n\t(No symbol) [0x00007FF7EC727A81]\n\t(No symbol) [0x00007FF7EC6E724A]\n\t(No symbol) [0x00007FF7EC70F6F3]\n\t(No symbol) [0x00007FF7EC6E7023]\n\t(No symbol) [0x00007FF7EC6AFF5E]\n\t(No symbol) [0x00007FF7EC6B11E3]\n\tGetHandleVerifier [0x00007FF7ECBB422D+3490733]\n\tGetHandleVerifier [0x00007FF7ECBCBA13+3586963]\n\tGetHandleVerifier [0x00007FF7ECBC144D+3544525]\n\tGetHandleVerifier [0x00007FF7EC92C9AA+838442]\n\t(No symbol) [0x00007FF7EC7DD01F]\n\t(No symbol) [0x00007FF7EC7D95E4]\n\t(No symbol) [0x00007FF7EC7D9786]\n\t(No symbol) [0x00007FF7EC7C8CB9]\n\tBaseThreadInitThunk [0x00007FFD6BB27374+20]\n\tRtlUserThreadStart [0x00007FFD6D93CC91+33]", "trace": "@pytest.fixture(scope=\"function\")\n    def setup():\n        \"\"\"Fixture to set up and tear down WebDriver.\"\"\"\n        options = Options()\n        options.add_experimental_option(\"detach\", False)\n        driver = webdriver.Chrome(options=options)\n        driver.get(ConfigReader.read_config(\"settings\", \"base_url\"))\n>       driver.maximize_window()\n\nconftest.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:532: in maximize_window\n    self.execute(command, None)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001E386D75810>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: JavaScript code failed\\\\nfrom un...07FF7EC7C8CB9]\\\\n\\\\tBaseThreadInitThunk [0x00007FFD6BB27374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFD6D93CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed\nE       from unknown command: 'Runtime.evaluate' wasn't found\nE         (Session info: chrome=133.0.6943.99)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7EC866EE5+28773]\nE       \t(No symbol) [0x00007FF7EC7D25D0]\nE       \t(No symbol) [0x00007FF7EC668FAA]\nE       \t(No symbol) [0x00007FF7EC6557B8]\nE       \t(No symbol) [0x00007FF7EC653F62]\nE       \t(No symbol) [0x00007FF7EC6547AF]\nE       \t(No symbol) [0x00007FF7EC67F9CB]\nE       \t(No symbol) [0x00007FF7EC673210]\nE       \t(No symbol) [0x00007FF7EC6730B9]\nE       \t(No symbol) [0x00007FF7EC644A72]\nE       \t(No symbol) [0x00007FF7EC642A03]\nE       \t(No symbol) [0x00007FF7EC727A81]\nE       \t(No symbol) [0x00007FF7EC6E724A]\nE       \t(No symbol) [0x00007FF7EC70F6F3]\nE       \t(No symbol) [0x00007FF7EC6E7023]\nE       \t(No symbol) [0x00007FF7EC6AFF5E]\nE       \t(No symbol) [0x00007FF7EC6B11E3]\nE       \tGetHandleVerifier [0x00007FF7ECBB422D+3490733]\nE       \tGetHandleVerifier [0x00007FF7ECBCBA13+3586963]\nE       \tGetHandleVerifier [0x00007FF7ECBC144D+3544525]\nE       \tGetHandleVerifier [0x00007FF7EC92C9AA+838442]\nE       \t(No symbol) [0x00007FF7EC7DD01F]\nE       \t(No symbol) [0x00007FF7EC7D95E4]\nE       \t(No symbol) [0x00007FF7EC7D9786]\nE       \t(No symbol) [0x00007FF7EC7C8CB9]\nE       \tBaseThreadInitThunk [0x00007FFD6BB27374+20]\nE       \tRtlUserThreadStart [0x00007FFD6D93CC91+33]\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException"}, "start": 1739968142717, "stop": 1739968142717, "uuid": "958e82ca-159a-44ac-8a21-ae56206c064a", "historyId": "c1781d3a85375a41a368ec09989431a6", "testCaseId": "c1781d3a85375a41a368ec09989431a6", "fullName": "tests.cart_test.TestCart#test_04_successful_checkout", "labels": [{"name": "suite", "value": "Cart Management Tests"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'login_page', 'products_page', 'cart_page')"}, {"name": "parentSuite", "value": "tests"}, {"name": "subSuite", "value": "TestCart"}, {"name": "host", "value": "Assaf"}, {"name": "thread", "value": "23716-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.cart_test"}]}