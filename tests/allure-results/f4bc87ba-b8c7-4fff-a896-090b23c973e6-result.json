{"name": "Validate Reset Button", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF797676EE5+28773]\n\t(No symbol) [0x00007FF7975E25D0]\n\t(No symbol) [0x00007FF797478FAA]\n\t(No symbol) [0x00007FF7974CF286]\n\t(No symbol) [0x00007FF7974CF4BC]\n\t(No symbol) [0x00007FF797522A27]\n\t(No symbol) [0x00007FF7974F728F]\n\t(No symbol) [0x00007FF79751F6F3]\n\t(No symbol) [0x00007FF7974F7023]\n\t(No symbol) [0x00007FF7974BFF5E]\n\t(No symbol) [0x00007FF7974C11E3]\n\tGetHandleVerifier [0x00007FF7979C422D+3490733]\n\tGetHandleVerifier [0x00007FF7979DBA13+3586963]\n\tGetHandleVerifier [0x00007FF7979D144D+3544525]\n\tGetHandleVerifier [0x00007FF79773C9AA+838442]\n\t(No symbol) [0x00007FF7975ED01F]\n\t(No symbol) [0x00007FF7975E95E4]\n\t(No symbol) [0x00007FF7975E9786]\n\t(No symbol) [0x00007FF7975D8CB9]\n\tBaseThreadInitThunk [0x00007FFD6BB27374+20]\n\tRtlUserThreadStart [0x00007FFD6D93CC91+33]", "trace": "self = <tests.sidebar_test.TestSidebar object at 0x0000020DAFA83160>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"aff98c04df97f852c2c8e07732758fe6\")>\nlogin_page = <pages.login_page.LoginPage object at 0x0000020DAFAADF60>\nsidebar_page = <pages.sidebar_page.SideBarPage object at 0x0000020DAFAAD360>\nproducts_page = <pages.products_page.ProductsPage object at 0x0000020DAFAAFFA0>\ncart_page = <pages.cart_page.CartPage object at 0x0000020DAFAAFC40>\n\n    @allure.title(\"Validate Reset Button\")\n    @allure.description(\"This test validates the app reset functionality.\")\n    def test_03_app_reset_functionality(self, setup, login_page, sidebar_page, products_page, cart_page):\n        login_page.fill_info(self.valid_username, self.valid_password)\n    \n        # Add product to cart\n        product_id = random.randint(1, 6)\n        print(f\"Adding product with ID {product_id} to cart.\")\n        products_page.add_to_cart(product_id)\n    \n        # Wait for cart to update (adjust selector accordingly)\n>       WebDriverWait(sidebar_page.driver, 10).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, \"your_cart_item_selector\"))\n        )\n\nsidebar_test.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"aff98c04df97f852c2c8e07732758fe6\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000020DAFC3C790>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF797676EE5+28773]\nE       \t(No symbol) [0x00007FF7975E25D0]\nE       \t(No symbol) [0x00007FF797478FAA]\nE       \t(No symbol) [0x00007FF7974CF286]\nE       \t(No symbol) [0x00007FF7974CF4BC]\nE       \t(No symbol) [0x00007FF797522A27]\nE       \t(No symbol) [0x00007FF7974F728F]\nE       \t(No symbol) [0x00007FF79751F6F3]\nE       \t(No symbol) [0x00007FF7974F7023]\nE       \t(No symbol) [0x00007FF7974BFF5E]\nE       \t(No symbol) [0x00007FF7974C11E3]\nE       \tGetHandleVerifier [0x00007FF7979C422D+3490733]\nE       \tGetHandleVerifier [0x00007FF7979DBA13+3586963]\nE       \tGetHandleVerifier [0x00007FF7979D144D+3544525]\nE       \tGetHandleVerifier [0x00007FF79773C9AA+838442]\nE       \t(No symbol) [0x00007FF7975ED01F]\nE       \t(No symbol) [0x00007FF7975E95E4]\nE       \t(No symbol) [0x00007FF7975E9786]\nE       \t(No symbol) [0x00007FF7975D8CB9]\nE       \tBaseThreadInitThunk [0x00007FFD6BB27374+20]\nE       \tRtlUserThreadStart [0x00007FFD6D93CC91+33]\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "This test validates the app reset functionality.", "attachments": [{"name": "stdout", "source": "b5d8ab1d-079b-42f7-a2fa-333cba706067-attachment.txt", "type": "text/plain"}], "start": 1740119984156, "stop": 1740119997498, "uuid": "4654a60f-2eda-421d-94df-77da5364b5ee", "historyId": "bc4a154de334e7c950254be201313cdb", "testCaseId": "bc4a154de334e7c950254be201313cdb", "fullName": "tests.sidebar_test.TestSidebar#test_03_app_reset_functionality", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "sidebar_test"}, {"name": "subSuite", "value": "TestSidebar"}, {"name": "host", "value": "Assaf"}, {"name": "thread", "value": "6944-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.sidebar_test"}]}